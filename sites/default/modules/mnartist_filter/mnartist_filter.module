<?php

/**
 * @file
 * Code for the MNArtist Filters feature.
 */

function mnartist_filter_menu() {
	$items['mnartist/filter/submit'] = array(
		'page callback' => 'mnartist_filter_view',
		'access arguments' => array('view own profile'), 
	);
    $items['user/saved-filters'] = array(
        'page callback' => 'mnartist_filter_user_view',
        'access arguments' => array('view own profile'), 
    );
    $items['user/saved-filters/delete'] = array(
        'page callback' => 'mnartist_filter_user_delete',
        'access arguments' => array('edit own profile'), 
    );
	return $items;
}
function mnartist_filter_view()
{
	global $user;

	$data = array(
  		'uid' => $user->uid,
  		'title' => $_POST['name'],
  		'url' => urlencode($_POST['url']),
	);
	drupal_write_record('mnartist_filter', $data);
	header('Location: ' . $_POST['url']);
}

function mnartist_filter_user_delete()
{
    global $user;
    $url = $_SERVER['REQUEST_URI'];
    $url = parse_url($url);
    if(isset($url['query']))
    {
        parse_str($url['query'], $vars);
        if(isset($vars['fid']))
        {
            $result = db_query("SELECT mn.fid, mn.uid, mn.title, mn.url FROM {mnartist_filter} mn WHERE mn.fid = :uid", array(':uid' => $vars['fid']))->fetchAssoc();
            if($result['uid'] == $user->uid)
            {
                $deleted = db_delete('mnartist_filter')->condition('uid', $user->uid)->condition('fid', $vars['fid'])->execute;
            }
        }
    }
    header('Location: /user/saved-filters');

}

function mnartist_filter_user_view()
{
    if($_SERVER['REQUEST_URI'] == '/user/saved-filters')
    {
        global $user;
        
        $result = db_query("SELECT mn.fid, mn.title, mn.url FROM {mnartist_filter} mn WHERE mn.uid = :uid", array(':uid' => $user->uid));
        $results = db_select('node', 'n')->fields('n', array('nid', 'title'))->condition('type', 'community')->execute()->fetchAll();
        $menu = array();
        foreach($results as $row)
        {
            $menu[$row->nid] = $row->title;
        }
        $output = "";
        $output .= "<table>" . PHP_EOL;
        $output .= "<thead><tr><td>Name</td><td>Filters</td><td>Options</td></tr></thead>" . PHP_EOL;
        $output .= "<tbody>" . PHP_EOL;
        while ($row = $result->fetchAssoc()) 
        {
            $url = parse_url(urldecode($row['url']));
            $string = '';
            if(isset($url['query']))
            {
                parse_str($url['query'],$vars);
                if(isset($vars['og']))
                {
                    $string .= "<b>Communities: </b>";
                    foreach($vars['og'] as $mkey => $mvalue)
                    {
                        $string .= '<b>' . $menu[$mkey] . '</b>';
                        if(is_array($mvalue))
                        {
                            $string .= ': ';
                            $subm = array();
                            foreach($mvalue as $skey => $svalue)
                            {
                                $term = taxonomy_term_load($svalue);
                                if(isset($term->name))
                                {
                                    $subm[] = $term->name;    
                                }
                                
                            }
                            $string .= implode(', ', $subm);
                        }
                        $string .= " ";
                    }
                }
                if(isset($vars['og']) && isset($vars['content']))
                {
                    $string .= '<br>';
                }
                if(isset($vars['content']))
                {
                    $string .= "<b>Content: </b>";
                    $string .= implode(', ', $vars['content']);
                }
            } else {
                $string = '<b>All Communites</b>';
            }
            $output .= '<tr><td><a href="' . urldecode($row['url']) . '">' . $row['title'] . '</a></td><td><a href="' . urldecode($row['url']) . '">' . $string . '</a></td><td><a href="' . urldecode($row['url']) . '">Go</a> - <a href="/user/saved-filters/delete?fid=' . $row['fid'] . '">Delete</a></td>';
        }
        $output .= "</tbody>" . PHP_EOL;
        $output .= "</table>";
        return $output;
    }
    
}

function _mnartist_filter_block_visibility() {

    if(arg(0) == 'community' && user_is_logged_in())
    {
    	return true;
    } else {
    	return false;
    }
}

function mnartist_filter_block_info() {
    return array(
        'mna_filter_create' => array(
            'info' => 'MNArtist Create Filter',
            'cache' => DRUPAL_NO_CACHE,
            'visibility' => BLOCK_VISIBILITY_PHP,
            'pages' => '<?php return _mnartist_filter_block_visibility(); ?>'
        ),
/*
        'mna_filter_view' => array(
            'info' => t('MNArtist View Filters'),
            'cache' => DRUPAL_NO_CACHE,
            'visibility' => BLOCK_VISIBILITY_PHP,
            'pages' => '<?php return _mnartist_filter_profile_block_visibility(); ?>'
        )
        */
    );
}

function mnartist_filter_block_view($delta = '') {
    switch($delta) {
        case 'mna_filter_create':
            $block['content'] = _mnartist_filter_create_filter();
        break;
        /*
        case 'mna_filter_view':
            $block['subject'] = 'View Filter';
            $block['content'] = _mnartist_filter_view_filter();
        break;
        */
    }
    return $block;
}

function _mnartist_filter_create_filter()
{
	ctools_add_js('filter', 'mnartist_filter');
	ctools_add_css('filter', 'mnartist_filter');
	$output = '';
	$output .= '<div id="dialog-form" title="Create new filter">';
		$output .= '<p class="validateTips">If you would like to save this filter please set a name and it will be saved to your mystuff filters.</p>';

		$output .= '<form id="filter-form" action="/mnartist/filter/submit" method="post">';
		$output .= '<fieldset>';
		    $output .= '<label for="name">Filter Name</label>';
		    $output .= '<input type="text" name="name" id="name" class="text ui-widget-content ui-corner-all" /><br/>';
		    $output .= '<input type="hidden" name="url" value="' . $_SERVER['REQUEST_URI'] . '" />';
		$output .= '</fieldset>';
		$output .= '</form>';
	$output .= '</div>';
	$output .= '<a href="#" id="create-filter">Star</a>';
	return $output;
}

function _mnartist_filter_view_filter()
{
	global $user;
	
	$result = db_query("SELECT mn.title, mn.url FROM {mnartist_filter} mn WHERE mn.uid = :uid", array(':uid' => $user->uid));

	$output = array();
	while ($row = $result->fetchAssoc()) 
	{
		$output[] = '<a href="' . urldecode($row['url']) . '">' . $row['title'] . '</a>';
	}
	return $output;
}