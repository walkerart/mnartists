<?php
/**
 * @file
 * Code for the MNArtist Profiles feature.
 */

define('ARTIST_ROLE', 4);
define('ORG_ROLE', 5);

include_once 'mnartist_profiles.features.inc';

function mnartist_profiles_theme() {
    $themes = array();

    $themes['mna_my_stuff_menu'] = array(
        'template' => 'templates/mna-my-stuff-menu',
        'variables' => array(
            'links' => array()
        )
    );

    return $themes;
}

/**
 * Form alter to prepopulate the user registration form with role types
 */
function mnartist_profiles_form_user_register_form_alter(&$form, &$form_state, $form_id) {
    $form['account_type'] = array(
        '#type'     => 'select',
        '#title'    => t('Registration Type'),
        '#options'  => array(
            'public'    => t('Public'),
            'artist'    => t('Artist'),
            'org'       => t('Organization'),
        ),
        '#required' => TRUE,
        '#weight'   => 100,
    );

    $form['#submit'][] = 'mnartist_profiles_form_user_register_submit';
}

function mnartist_profiles_form_user_register_submit(&$form, &$form_state) {
    global $user;

    // Determine what type of account the user registered
    switch($form_state['values']['account_type']) {
        case 'public':
            $goto = 'main';
            break;
        case 'artist':
            $rid = ARTIST_ROLE;
            $goto = 'main';
            break;
        case 'org':
            $rid = ORG_ROLE;
            $goto = 'organization';
            break;
    }

    // If an rid is assigned, assign that role to the user
    if (isset($rid)) {
        $query = db_insert('users_roles')->fields(array('uid', 'rid'));
        $query->values(array(
            'uid' => $user->uid,
            'rid' => $rid,
        ));
        $query->execute();
    }

    // Redirect to the users profile edit page
    drupal_goto('user/' . $user->uid . '/edit/' . $goto); 
}

/**
 * Implementes hook_field_extra_fields()
 */
function mnartist_profiles_field_extra_fields() {
    $extra['user']['user'] = array(
        'display' => array(
            'mnartist_profiles_artworks' => array(
                'label' => t('MNArtist Profiles: Artist Artworks'),
                'description' => 'Slideshow displaying a users artworks',
                'weight' => 100,
            ),
            'mnartist_profiles_collections' => array(
                'label' => t('MNArtist Profiles: Collections'),
                'description' => 'A list of collections by content type',
                'weight' => 100,
            ),
        ),
    );

    return $extra;
}

/**
 * Implements hook_user_view()
 */
function mnartist_profiles_user_view($account, $view_mode, $langcode) {
    // Show an artists artworks
    $view = views_get_view('artist_artworks');
    $view->dom_id = 'artist-artworks';
    $view->args[] = arg(1);
    $view->execute();

    $account->content['mnartist_profiles_artworks'] = array(
        '#type' => 'user_profile_item',
        '#title' => t('Artworks'),
        '#markup' => $view->render('block_1'),
    );

    // Build an artists collections by node type
    $types = node_type_get_types();
    $content = '';
    $account->content['mnartist_profiles_collections'] = array(
        '#type' => 'user_profile_category',
        '#title' => t('Collections'),
    );

    foreach($types as $type) {

        $view = views_get_view('collections');
        $view->dom_id = 'artist-collections-' . $type->type;
        $view->args[] = arg(1);
        $view->args[] = $type->type;
        $view->execute();

        if (!$view->total_rows) continue;

        $content = '<h3>' . $type->name . '</h3>';
        $content .= $view->render();
        $account->content['mnartist_profiles_collections'][$type->type] = array(
            '#type' => 'user_profile_item',
            '#title' => $type->name,
            '#markup' => $view->render(),
        );

    }  

}

function mnartist_profiles_preprocess_user_profile(&$vars) {
    // hide the summary view
    unset($vars['user_profile']['summary']);
}

/**********************************
 * Utility functions
 */
function _get_role($user = NULL) {
    if (!$user) {
        global $user;
    } 

    if ($user->roles[ARTIST_ROLE]) {
        return 'artist';
    } else if ($user->roles[ORG_ROLE]) {
        return 'org';
    } else {
        return 'public';
    }
}

function _mnartist_profile_block_visibility() {
    global $user;

    if ((arg(0) == 'user' && $user->uid == arg(1)) || (arg(0) == 'user' && !user_is_logged_in())) {
        return true;
    }

    return false;
}


function mnartist_profiles_block_info() {
    return array(
        'mna_my_stuff' => array(
            'info' => 'My Stuff',
            'cache' => DRUPAL_NO_CACHE,
            'visibility' => BLOCK_VISIBILITY_PHP,
            'pages' => '<?php return _mnartist_profile_block_visibility(); ?>'
        ),

        'mna_user_profile' => array(
            'info' => t('User Profile'),
            'cache' => DRUPAL_NO_CACHE,
            'visibility' => BLOCK_VISIBILITY_PHP,
            'pages' => '<?php return _mnartist_profile_block_visibility(); ?>'
        )
    );
}

function mnartist_profiles_block_view($delta = '') {
    switch($delta) {
        case 'mna_my_stuff':
            $block['subject'] = 'My Stuff';
            $block['content'] = _mnartist_profile_my_stuff();
        break;
        case 'mna_user_profile':
            $block['subject'] = 'User Profile';
            $block['content'] = _mnartist_profile_user_profile();
        break;
    }

    return $block;
}

function _mnartist_profile_my_stuff() {
    $output = "";

    if (!user_is_logged_in()) {
        $userBlock = module_invoke('user', 'block', 'view', 'login');
        $output = $userBlock['content'];
    } else {
        $links = array();

        $links[] = l("Feed", "user/feed");
        $links[] = array(
            'data' => l("Collections", "user/collections"),
            'children' => array(l("collection 1", "user/collections"), l("collection 2", "user/collections"))
        );
        $links[] = array(
            'data' => l("Saved Filters", "user/saved-filters"),
            'children' => array(l("filter 1", "user/saved-filters"), l("filter 2", "user/saved-filters"))
        );
        $links[] = l("Profile", "user") . l("edit", "user/edit", array("attributes" => array("class" => "user-edit")));

        $renderedLinks = theme_item_list(array(
            'items' => $links,
            'title' => null,
            'type' => 'ul',
            'attributes' => array(
                'class' => array('my-stuff-menu')
            )
        ));

        $editLinks = theme_item_list(array(
            'items' => array(
                l("Add Artwork", "node/add/artwork"),
                l("Add Event", "node/add/event")
            ),
            'title' => null,
            'type' => 'ul',
            'attributes' => array(
                'class' => array('my-stuff-edit-menu')
            )
        ));

        $output = theme("mna_my_stuff_menu", array(
            'links' => $renderedLinks,
            'editLinks' => $editLinks
        ));
    }
    return $output;
}

function _mnartist_profile_user_profile() {
    $output = "";
    $user = user_load(arg(1));
    $fieldset = array();
    if(isset($user->content['profile_main']))
    {
        $main_array = array_values($user->content['profile_main']['view']['profile2']);
        $main_pid = array_keys($user->content['profile_main']['view']['profile2']);
        $main = array_shift($main_array);
        foreach($main as $data)
        {
            if(is_array($data))
            {
                if(isset($data['#theme']))
                {
                    $field_data = field_info_field($data['#field_name']);
                    $privacy = (bool) _profile2_field_privacy_value($field_data['id'], $main_pid);
                    if($privacy != '1')
                    {
                        foreach($data['#items'] as $key => $value)
                        {
                            $fieldset[$data['#field_name']][] = array(
                                'name' => $data['#field_name'],
                                'value' => $data[$key]
                            );
                        }
                    }
                }
            }
        }
    } else {
        $main = NULL;
    }

    if(isset($user->content['profile_resume']))
    {
        $res_array = array_values($user->content['profile_resume']['view']['profile2']);
        $res_pid = array_keys($user->content['profile_resume']['view']['profile2']);
        $res = array_shift($res_array);
        foreach($res as $data)
        {
            if(is_array($data))
            {
                if(isset($data['#theme']))
                {
                    $field_data = field_info_field($data['#field_name']);
                    $privacy = (bool) _profile2_field_privacy_value($field_data['id'], $res_pid);
                    if($privacy != '1')
                    {
                        foreach($data['#items'] as $key => $value)
                        {
                            $fieldset[$data['#field_name']][] = array(
                                'name' => $data['#field_name'],
                                'value' => $data[$key]
                            );
                        }
                    }
                }
            }
        }
    } else {
        $res = NULL;
    }
    if(isset($fieldset['field_full_name']))
    {
        $fsvalue = array_values($fieldset['field_full_name'][0]['value']['entity']['field_collection_item']);
        $fs = array_shift($fsvalue);
        $top_name = $fs['field_first_name'][0]['#markup'] . ' ' . $fs['field_last_name'][0]['#markup'];
    } else {
        if(isset($fieldset['field_pseudo']))
        {
            $top_name = 'toast';
        } else {
            $top_name = user_load(arg(1))->name;
        }
    }
    $output .= "<h1>" . $top_name . "</h1>";
    $output .= "<div class='user-profile'>";
        $output .= "<div class='user-profile-data'>";
            $output .= "<div class='left'>";
    if(!is_null($user->picture))
                $output .= "<div class='profile-image-wrapper'><img src='" . image_style_url('artist-profile-photo',$user->picture->uri) . "'></div>";
            $output .= "</div>";
            $output .= "<div class='right'>";
            if(isset($fieldset['field_city']) && isset($fieldset['field_state']))
            {
                $output .= "<div class='profile-city-state'>";
                $output .= $fieldset['field_city'][0]['value']['#markup'] . ', ' . $fieldset['field_state'][0]['value']['#markup'];
                $output .= "</div>";
            }
            if(isset($fieldset['field_full_name']))
            {
                $output .= "<div class='profile-full-name'>";
                $output .= "<span class='profile-title'>Contact Name:</span> " . $fs['field_first_name'][0]['#markup'] . ' ' . $fs['field_last_name'][0]['#markup'];
                $output .= "</div>";
            }
            if(isset($fieldset['field_phone']))
            {
                $output .= "<div class='profile-phone'>";
                $output .= "<span class='profile-title'>Phone:</span> " . $fieldset['field_phone'][0]['value']['#markup'];
                $output .= "</div>";
            }
            if(isset($fieldset['field_public_email']))
            {
                $output .= "<div class='profile-email'>";
                $output .= "<span class='profile-title'>E-Mail:</span>" . $fieldset['field_public_email'][0]['value']['#markup'];
                $output .= "</div>";
            }
            if(isset($fieldset['field_twitter']) || isset($fieldset['field_facebook']))
            {
                $output .= "<div class='social-links'>";
                if(isset($fieldset['field_twitter']))
                {
                    $output .= "<div class='profile-twitter'>";
                    $output .= "<a class='twitter' href='http://www.twitter.com/" . $fieldset['field_twitter'][0]['value']['#markup'] . "'>" . $fieldset['field_twitter'][0]['value']['#markup'] . "</a>";
                    $output .= "</div>";
                }
                if(isset($fieldset['field_facebook']))
                {
                    $output .= "<div class='profile-facebook'>";
                    $output .= "<a class='facebook' href='http://www.facebook.com/" . $fieldset['field_facebook'][0]['value']['#markup'] . "'>" . $fieldset['field_facebook'][0]['value']['#markup'] . "</a>";
                    $output .= "</div>";
                }
                $output .= "</div>";
            }

            // Space for Tags
            $output .= "</div>";
        $output .= "</div>";
    $output .= "</div>";

    $output .= "<div id='tabs'>";
        $output .= "<ul>";
            $output .= "<li><a href=\"#tabs-1\">About " . $top_name . "</a></li>";
            $i = 1;
            if(isset($fieldset['field_awards']))
            {
                $i++;
                $ia = $i;
                $output .= "<li><a href=\"#tabs-$i\">Awarts & Exhibitions</a></li>";
            }
            if(isset($fieldset['field_galleries']))
            {
                $i++;
                $ig = $i;
                $output .= "<li><a href=\"#tabs-$i\">Galleries Etc.</a></li>";
            }
        $output .= "</ul>";
        $output .= "<div id='tabs-1'>";
        if(isset($fieldset['field_general_statement']))
        {
            $output .= "<h5 class='profile-title'>Artist Statement</h5>";
            $output .= "<p>" . $fieldset['field_general_statement'][0]['value']['#markup'] . "</p>";
        }
        if(isset($fieldset['field_education']))
        {
            $output .= "<h5 class='profile-title'>Education</h5>";
            foreach($fieldset['field_education'] as $edu)
            {
                $fevalue = array_values($edu['value']['entity']['field_collection_item']);
                $fe = array_shift($fevalue);
                if(isset($fe['field_year']) && isset($fe['field_degree']) && isset($fe['field_school']) && isset($fe['field_major']))
                {
                    $output .= $fe['field_year'][0]['#markup'] . ' ';
                    $output .= $fe['field_degree'][0]['#markup'] . ', ';
                    $output .= $fe['field_major'][0]['#markup'] . ', ';
                    $output .= $fe['field_school'][0]['#markup'] . '<br />';
                }
            }
        } 
        if(isset($fieldset['field_bio']) || isset($fieldset['field_country']))
        {
            $output .= "<h5 class='profile-title'>Biography</h5>";
            if(isset($fieldset['field_bio']))
            {
                $output .= "<p>" . $fieldset['field_bio'][0]['value']['#markup'] . "</p>";
            }
            if(isset($fieldset['field_country']))
            {
                $output .= "<div class='field_country'><h5 class='profile-title'>Country</h5><br>" . $fieldset['field_country'][0]['value']['#markup'] . "</div>";
            }
            if(isset($fieldset['field_birthplace']))
            {
                $output .= "<div class='field_birthplace'><h5 class='title'>Birthplace</h5><br>" . $fieldset['field_birthplace'][0]['value']['#markup'] . "</div>";
            }
        }
        $output .= "</div>";
        if(isset($fieldset['field_awards']))
        {
            $output .= "<div id='tabs-$ia'>";
            foreach($fieldset['field_awards'] as $award1)
            {
                $awardkey = array_values($award1['value']['entity']['field_collection_item']);
                $award = array_shift($awardkey);
                $output .= $award['field_year'][0]['#markup'] . ', ' . $award['field_award_name'][0]['#markup'] . ' ' . $award['field_award_organization'][0]['#markup'] . '<br />';
            }
            $output .= "</div>";
        }
        if(isset($fieldset['field_galleries']))
        {
            $output .= "<div id='tabs-$ig'>";
            foreach($fieldset['field_galleries'] as $gal)
            {
                $galkey = array_values($gal['value']['entity']['field_collection_item']);
                $gallery = array_shift($galkey);
                $output .= $gallery['field_gallery_name'][0]['#markup'] . ', ' . $gallery['field_contact_name'][0]['#markup'] . '<br />';
            }
            $output .= "</div>";
        }
    $output .= "</div>";
    $output .= "<link rel=\"stylesheet\" href=\"http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.9/themes/base/jquery-ui.css\" type=\"text/css\" media=\"all\" />";
    $output .= "<script>
    jQuery(function() {
        jQuery(\"#tabs\").tabs();
    });
    </script>";
    return $output;
}