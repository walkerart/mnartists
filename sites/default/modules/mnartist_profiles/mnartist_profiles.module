<?php
/**
 * @file
 * Code for the MNArtist Profiles feature.
 */

define('ARTIST_ROLE', 4);
define('ORG_ROLE', 5);

include_once 'mnartist_profiles.features.inc';

/**
 * Form alter to prepopulate the user registration form with role types
 */
function mnartist_profiles_form_user_register_form_alter(&$form, &$form_state, $form_id) {
    $form['account_type'] = array(
        '#type'     => 'select',
        '#title'    => t('Registration Type'),
        '#options'  => array(
            'public'    => t('Public'),
            'artist'    => t('Artist'),
            'org'       => t('Organization'),
        ),
        '#required' => TRUE,
        '#weight'   => 100,
    );

    $form['#submit'][] = 'mnartist_profiles_form_user_register_submit';
}

function mnartist_profiles_form_user_register_submit(&$form, &$form_state) {
    global $user;

    // Determine what type of account the user registered
    switch($form_state['values']['account_type']) {
        case 'public':
            $goto = 'main';
            break;
        case 'artist':
            $rid = ARTIST_ROLE;
            $goto = 'main';
            break;
        case 'org':
            $rid = ORG_ROLE;
            $goto = 'organization';
            break;
    }

    // If an rid is assigned, assign that role to the user
    if (isset($rid)) {
        $query = db_insert('users_roles')->fields(array('uid', 'rid'));
        $query->values(array(
            'uid' => $user->uid,
            'rid' => $rid,
        ));
        $query->execute();
    }

    // Redirect to the users profile edit page
    drupal_goto('user/' . $user->uid . '/edit/' . $goto); 
}

/**
 * Implementes hook_field_extra_fields()
 */
function mnartist_profiles_field_extra_fields() {
    $extra['user']['user'] = array(
        'display' => array(
            'mnartist_profiles_artworks' => array(
                'label' => t('MNArtist Profiles: Artist Artworks'),
                'description' => 'Slideshow displaying a users artworks',
                'weight' => 100,
            ),
            'mnartist_profiles_collections' => array(
                'label' => t('MNArtist Profiles: Collections'),
                'description' => 'A list of collections by content type',
                'weight' => 100,
            ),
        ),
    );

    return $extra;
}

/**
 * Implements hook_user_view()
 */
function mnartist_profiles_user_view($account, $view_mode, $langcode) {
    // Show an artists artworks
    $view = views_get_view('artist_artworks');
    $view->dom_id = 'artist-artworks';
    $view->args[] = arg(1);
    $view->execute();

    $account->content['mnartist_profiles_artworks'] = array(
        '#type' => 'user_profile_item',
        '#title' => t('Artworks'),
        '#markup' => $view->render('block_1'),
    );

    // Build an artists collections by node type
    $types = node_type_get_types();
    $content = '';
    $account->content['mnartist_profiles_collections'] = array(
        '#type' => 'user_profile_category',
        '#title' => t('Collections'),
    );

    foreach($types as $type) {

        $view = views_get_view('collections');
        $view->dom_id = 'artist-collections-' . $type->type;
        $view->args[] = arg(1);
        $view->args[] = $type->type;
        $view->execute();

        if (!$view->total_rows) continue;

        $content = '<h3>' . $type->name . '</h3>';
        $content .= $view->render();
        $account->content['mnartist_profiles_collections'][$type->type] = array(
            '#type' => 'user_profile_item',
            '#title' => $type->name,
            '#markup' => $view->render(),
        );

    }  

}

function mnartist_profiles_preprocess_user_profile(&$vars) {
    // hide the summary view
    unset($vars['user_profile']['summary']);
}

/**********************************
 * Utility functions
 */
function _get_role($user = NULL) {
    if (!$user) {
        global $user;
    } 

    if ($user->roles[ARTIST_ROLE]) {
        return 'artist';
    } else if ($user->roles[ORG_ROLE]) {
        return 'org';
    } else {
        return 'public';
    }
}
