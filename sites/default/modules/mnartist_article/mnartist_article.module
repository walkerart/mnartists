<?php

/**
 * Implements hook_theme()
 */
function mnartist_article_theme() {
    return array(
        'artist_community_other_articles_by_this_author' => array(
            'variables' => array(),
            'template' => 'templates/mna-article-other-articles'
        ),
        'artist_community_other_articles_in_this_category' => array(
            'variables' => array(),
            'template' => 'templates/mna-article-other-articles-cat'
        )
    );
}

/**
 * Implements hook_block_info()
 */
function mnartist_article_block_info() {

    $blocks['other_articles_by_this_author'] = array(
        'info' => t('MNArtists Article - Other Articles By This Author'),
        'cache' => DRUPAL_NO_CACHE,
        'visibility' => BLOCK_VISIBILITY_PHP,
        'pages' => true,// @TODO decide if this value is acceptable
    );

    $blocks['other_articles_in_this_category'] = array(
        'info' => t('MNArtists Article - Other Articles In This Category'),
        'cache' => DRUPAL_NO_CACHE,
        'visibility' => BLOCK_VISIBILITY_PHP,
        'pages' => true,// @TODO decide if this value is acceptable
    );

    return $blocks;
}

function mnartist_article_block_view($delta = '') {
    switch($delta) {
        case 'other_articles_by_this_author':
            $block['subject'] = t('Other Articles By This Author');
            $block['content'] = _article_block_other_articles_by_this_author();
            break;
        case 'other_articles_in_this_category':
            $block['subject'] = t('Other Articles In This Category');
            $block['content'] = _article_block_other_articles_in_this_category();
    }

    return $block;
}

function mnartist_article_element_info_alter(&$type) {
    if (isset($type['text_format']['#process'])) {
        foreach ($type['text_format']['#process'] as &$callback) {
            if ($callback === 'filter_process_format') {
                $callback = 'mnartist_article_filter_process_format';
            }
        }
    }
}

function mnartist_article_filter_process_format($element) {
    $element = filter_process_format($element);
    // if this is an article then force the format on the body
    // field to filtered_html_b (Article Text)
    if (isset($element['#bundle']) && $element['#bundle'] === 'article' && $element['#field_name'] === 'field_body') {
        $element['format']['format']['#default_value'] = 'filtered_html_b';
    }
    return $element;
}

/**
 * @return
 * returns a sidebar block for use in single article
 * view containing (max) three other articles by
 * context author
 */
function _article_block_other_articles_by_this_author () {
    $other_articles = array();
    $output = '';
    // user "MN Artists"
    $default_uid = '492';

    $article_node = menu_get_object();

    if ($article_node->type == 'article') {
        // @TODO check with jehra on whether this should
        // also surface promoted articles
        $other_articles_filters = array();

        $other_articles_filter = new SearchApiQueryFilter();
        $other_articles_filter->condition('status', '1', '=');

        // if MN Artists, check we should find articles by byline
        if ($article_node->uid == $default_uid && !empty($article_node->field_byline)) {
            $other_articles_filter->condition('field_byline', $article_node->field_byline[LANGUAGE_NONE][0]['safe_value'], '=');
        }
        else {
            $other_articles_filter->condition('author', $article_node->uid, '=');
        }
        $other_articles_filter->condition('type', 'article', '=');
        $other_articles_filter->condition('nid', $article_node->nid, '<>');
        $other_articles_filters[] = $other_articles_filter;

        $other_articles_result = artist_community_execute_query(NODE_INDEX, $other_articles_filters, array(array('changed', 'DESC')), 3);

        foreach($other_articles_result as $context_node) {
            // build an object for the template with
            // just what we need
            $context_article = array();
            $context_article['title'] = $context_node->title;
            $context_article['created'] = $context_node->created;
            $context_article['node_uri'] = url('node/' . $context_node->nid);

            if (isset($context_node->field_images['und'])) {
                $context_article['image_uri'] = image_style_url('medium', $context_node->field_images['und'][0]['uri']);
            }
            $other_articles[] = $context_article;
        }

        $output = theme('artist_community_other_articles_by_this_author', array('other_articles' => $other_articles, 'max_articles' => 3));
    }

    return $output;
}


/**
 * @return
 * returns a sidebar block for use in single article
 * view containing other articles in the same category
 * as the context article
 */
function _article_block_other_articles_in_this_category () {
    $other_articles = array();
    $community_title = '';
    $output = '';

    $article_node = menu_get_object();
    if ($article_node) {
        if (isset($article_node->og_group_ref['und'])) {
            $tid = $article_node->og_group_ref['und'][0]['target_id'];
            $community_node = node_load($tid);
            $community_title = $community_node->title;

            $other_articles_cat_filters = array();
            $other_articles_cat_filter = new SearchApiQueryFilter();
            $other_articles_cat_filter->condition('status', '1', '=');
            $other_articles_cat_filter->condition('og_group_ref', $tid, '=');
            $other_articles_cat_filter->condition('type', 'article', '=');
            $other_articles_cat_filter->condition('nid', $article_node->nid, '<>', '=');
            $other_articles_cat_filters[] = $other_articles_cat_filter;
            //$other_articles_cat_result = artist_community_execute_query(NODE_INDEX, $other_articles_cat_filters, array(array('promote', 'ASC'), array('changed', 'ASC')), 3);
            $other_articles_cat_result = artist_community_execute_query(NODE_INDEX, $other_articles_cat_filters, array(array('changed', 'ASC')), 3);
            foreach($other_articles_cat_result as $context_node) {
                // build an object for the template with
                // just what we need
                $context_article = array();
                $context_article['title'] = $context_node->title;
                $context_article['created'] = $context_node->created;
                $context_article['node_uri'] = url('node/' . $context_node->nid);

                if (isset($context_node->field_images['und'])) {
                    $context_article['image_uri'] = image_style_url('medium', $context_node->field_images['und'][0]['uri']);
                }
                $other_articles[] = $context_article;
            }
        }

        $output = theme('artist_community_other_articles_in_this_category', array('community_title' => $community_title, 'other_articles' => $other_articles, 'max_articles' => 3));
    }

    return $output;
}

function mnartist_article_wysiwyg_plugin($editor, $version) {
    switch ($editor) {
        case 'ckeditor':
            return array(
                'justify' => array(
                    'url' => 'http://ckeditor.com/addon/justify',
                    'buttons' => array(
                        'JustifyLeft' => 'Justify Left',
                        'JustifyRight' => 'Justify Right',
                        'JustifyCenter' => 'Justify Center'
                    ),
                    'load' => TRUE,
                    'internal' => TRUE,
            ),
        );
    }
}

function mnartist_article_form_alter(&$form, &$form_state, $form_id) {
    switch ($form_id) {
        case "article_node_form":
        case "artwork_node_form":
            $form['comment'] = $form['comment_settings']['comment'];
            $form['comment']['#weight'] = 98;
            unset($form['comment']['#title_display']);
            unset($form['comment_settings']);
        case "article_node_form":
            $form['author']['name']['#autocomplete_path'] = 'user/ac_fullname';
            break;
    }
}
