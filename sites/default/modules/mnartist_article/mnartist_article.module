<?php

/**
 * Implements hook_theme()
 */
function mnartist_article_theme() {
    return array(
        'artist_community_other_articles_by_this_author' => array(
            'variables' => array(),
            'template' => 'templates/mna-article-other-articles'
        ),
        'artist_community_other_articles_in_this_category' => array(
            'variables' => array(),
            'template' => 'templates/mna-article-other-articles-cat'
        )
    );
}

/**
 * Implements hook_block_info()
 */
function mnartist_article_block_info() {

    $blocks['other_articles_by_this_author'] = array(
        'info' => t('MNArtists Article - Other Articles By This Author'),
        'cache' => DRUPAL_NO_CACHE,
        'visibility' => BLOCK_VISIBILITY_PHP,
        'pages' => true,// @TODO decide if this value is acceptable
    );

    $blocks['other_articles_in_this_category'] = array(
        'info' => t('MNArtists Article - Other Articles In This Category'),
        'cache' => DRUPAL_NO_CACHE,
        'visibility' => BLOCK_VISIBILITY_PHP,
        'pages' => true,// @TODO decide if this value is acceptable
    );

    return $blocks;
}

function mnartist_article_block_view($delta = '') {
    switch($delta) {
        case 'other_articles_by_this_author':
            $block['subject'] = t('Other Articles By This Author');
            $block['content'] = _article_block_other_articles_by_this_author();
            break;
        case 'other_articles_in_this_category':
            $block['subject'] = t('Other Articles In This Category');
            $block['content'] = _article_block_other_articles_in_this_category();
    }

    return $block;
}

/**
 * @return
 * returns a sidebar block for use in single article
 * view containing (max) three other articles by
 * context author
 */
function _article_block_other_articles_by_this_author () {
    $node_id = arg(1);
    $other_articles = array();

    if (!is_null($node_id)) {
        $article_node = node_load($node_id);
        if ($article_node) {
            // @TODO check with jehra on whether this should
            // also surface promoted articles
            // @TODO doublecheck result directly against SOLR, why is only 1 coming back? is that possibly all there is? doesn't seem so
            $other_articles_filters = array();
            $other_articles_filter = new SearchApiQueryFilter;
            $other_articles_filter->condition('status', '1');
            $other_articles_filter->condition('author', $article_node->uid);
            $other_articles_filter->condition('type', 'article');
            $other_articles_filter->condition('nid', $node_id, '<>');
            $other_articles_filters[] = $other_articles_filter;
            $other_articles_result = artist_community_execute_query(NODE_INDEX, $other_articles_filters, array(array('changed', 'ASC')));

            $limit_iterator = 1;
            foreach($other_articles_result as $result) {
                $context_node = node_load($result->nid);

                // build an object for the template with
                // just what we need
                $context_article = new StdClass;
                $context_article->title = $context_node->title;
                $context_article->created = $context_node->created;
                $context_article->node_uri = "/node/$context_node->nid";
                if (isset($context_node->field_images['und'])) {
                    $context_article->image_uri = image_style_url('medium', $context_node->field_images['und'][0]['uri']);
                }
                $other_articles[] = $context_article;
                if ($limit_iterator >= 3) {
                    break;
                }
                $limit_iterator++;
            }
        }
    }
    return theme('artist_community_other_articles_by_this_author', array('other_articles' => $other_articles,
                                                                            'max_articles' => 3));
}


/**
 * @return
 * returns a sidebar block for use in single article
 * view containing other articles in the same category
 * as the context article
 */
function _article_block_other_articles_in_this_category () {
    $node_id = arg(1);
    $other_articles = array();
    $community_title = '';
    if (!is_null($node_id)) {
        $article_node = node_load($node_id);
        if ($article_node) {
            if (isset($article_node->og_group_ref['und'])) {
                $tid = $article_node->og_group_ref['und'][0]['target_id'];
                $community_node = node_load($tid);
                $community_title = $community_node->title;

                $other_articles_cat_filters = array();
                $other_articles_cat_filter = new SearchApiQueryFilter;
                $other_articles_cat_filter->condition('status', '1');
                $other_articles_cat_filter->condition('og_group_ref', $tid);
                $other_articles_cat_filter->condition('type', 'article');
                $other_articles_cat_filter->condition('nid', $node_id, '<>');
                $other_articles_cat_filters[] = $other_articles_cat_filter;
                $other_articles_cat_result = artist_community_execute_query(NODE_INDEX, $other_articles_cat_filters, array(array('promote', 'ASC'), array('changed', 'ASC')));

                $limit_iterator = 1;
                foreach($other_articles_cat_result as $key => $result) {
                    $context_node = node_load($result->nid);

                    // build an object for the template with
                    // just what we need
                    $context_article = new StdClass;
                    $context_article->title = $context_node->title;
                    $context_article->created = $context_node->created;
                    $context_article->node_uri = "/node/$context_node->nid";
                    if (isset($context_node->field_images['und'])) {
                        $context_article->image_uri = image_style_url('medium', $context_node->field_images['und'][0]['uri']);
                    }
                    $other_articles[] = $context_article;
                    if ($limit_iterator >= 3) {
                        break;
                    }
                    $limit_iterator++;
                }
            }
        }
    }
    return theme('artist_community_other_articles_in_this_category', array('community_title' => $community_title,
                                                                            'other_articles' => $other_articles,
                                                                            'max_articles' => 3));
}